export const STATION_CURATORS = 'query GetStationCuratorsWeb($pandoraIds: [String!]!) {   entities(ids: $pandoraIds) {     ... on StationFactory {       pandoraId: id       curator {         pandoraId: id         name         shareableUrlPath: urlPath         artist {           pandoraId: id           shareableUrlPath: urlPath         }       }     }   } } ';
export const RECENTLY_PLAYED = 'query GetRecentlyPlayedSourcesWeb($limit: Int, $types: [RecentlyPlayedSourceType!]!, $playedAfter: DateTime) {\n recentlyPlayedSources(pagination: {limit: $limit}, types: $types, playedAfter: $playedAfter) {\n items {\n sourceEntity {\n ...RecentlyPlayedSourceFragment\n __typename\n }\n __typename\n }\n __typename\n }\n}\n\nfragment RecentlyPlayedSourceFragment on IEntity {\n ... on Station {\n id\n type\n isCollected\n stationType\n __typename\n }\nâ€¦ {\n ...RightsFragment\n __typename\n }\n __typename\n }\n ... on ArtistPlay {\n id\n type\n artist {\n id\n name\n shareableUrlPath: urlPath\n icon: art {\n ...ArtFragment\n __typename\n }\n __typename\n }\n __typename\n }\n}\n\nfragment ArtFragment on Art {\n artId\n dominantColor\n artUrl: url(size: WIDTH_500)\n}\n\nfragment RightsFragment on Rights {\n expirationTime\n hasInteractive\n hasRadioRights\n hasOffline\n}\n'